services:
    publisher-api:
        image: publisher-api:${TAG:-latest}
        build:
            context: .
            dockerfile: Dockerfile.PublisherApi
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - Redis__Host=redis_db
            - RabbitMq__HostAddress=rabbitmq
        ports:
            - 5000:5000
        healthcheck:
            test: curl --fail -s http://publisher-api:5000/api/HealthCheck || exit 1
            interval: 20s
            timeout: 10s
            retries: 3
        depends_on:
            - redis_db
            - rabbitmq

    worker:
        image: worker:${TAG:-latest}
        build:
            context: .
            dockerfile: Dockerfile.Worker
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - RabbitMq__HostAddress=rabbitmq
        depends_on:
            - rabbitmq

    redis_db:
        image: redis
        container_name: cache
        ports:
            - 6379:6379
        restart: unless-stopped
        volumes:
        - redis_volume:/data
      
    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
        healthcheck:
            timeout: 5s
            interval: 5s
            retries: 10
            test:
                - "CMD"
                - "rabbitmqctl"
                - "status" 

volumes:
    redis_volume: